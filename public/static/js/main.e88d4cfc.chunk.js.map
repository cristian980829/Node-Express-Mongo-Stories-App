{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/fileUpload.js","helpers/prepareStories.js","actions/ui.js","actions/storie.js","actions/auth.js","components/auth/Copyright.js","hooks/useForm.js","helpers/theme.js","components/auth/LoginScreen.js","actions/user.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/storie/StorieCard.js","components/storie/ImageList.js","components/dropzone/Dropzone.js","components/storie/StorieImageCard.js","components/storie/StorieForm.js","components/ui/DeleteFab.js","components/ui/EditFab.js","components/ui/ReturnFab.js","components/ui/ShowLoading.js","components/ui/MessageSnack.js","components/storie/StorieModal.js","components/ui/AddNewFab.js","components/storie/StoriesScreen.js","components/ui/Navbar/ButtonAppBarCollapse.js","components/user/UserFormChangePassword.js","components/user/UserFormFields.js","components/user/UserFormInfo.js","components/user/UserForm.js","components/user/UserModal.js","components/ui/Navbar/AppBarCollapse.js","components/ui/Navbar/Navbar.js","components/storie/MyStoriesScreen.js","components/user/UserInfoScreen.js","components/user/UserCard.js","components/user/UsersScreen.js","routers/StorieRouter.js","components/ui/ErrorScreen.js","routers/AppRouter.js","reducers/authReducer.js","reducers/storieReducer.js","reducers/uiReducer.js","reducers/userReducer.js","reducers/rootReducer.js","store/store.js","StoriesApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","fileUpload","file","a","formData","FormData","append","resp","ok","json","cloudResp","secure_url","filesUpload","images","urlArray","clouResp","console","log","prepareStories","stories","map","e","registration_date","moment","toDate","uiStorieOpenModal","type","uiStorieCloseModal","uiModalViewModel","uiModalEditModel","uiUserOpenModal","uiOpenShowSuccessMessage","message","payload","uiOpenShowErrorMessage","uiShowLoading","loading","storieStartAddNew","storie","dispatch","getState","auth","user","uid","name","urlImages","_id","storieAddNew","storieClearImages","msg","storieStartUpdate","storieUpdated","storieDeleted","storieSetActive","storieStartLoading","storieLoaded","Swal","fire","storieAddImage","storieIsValidImages","valid","setServerError","login","checkingFinish","startLogout","clear","logout","userStartUpdate","currentUser","userUpdated","Copyright","props","Typography","variant","color","align","Date","getFullYear","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","value","theme","createTheme","palette","primary","main","danger","LoginScreen","useDispatch","error","setError","showPassword","email","password","formValues","isFormValid","validator","isEmail","length","className","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","preventDefault","text","showConfirmButton","allowOutsideClick","showLoading","setItem","getTime","urlimage","rol","close","startLogin","noValidate","mt","Stack","width","spacing","Alert","severity","Input","autoComplete","onChange","placeholder","required","fullWidth","autoFocus","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","event","Button","startIcon","mb","Grid","container","item","to","startUserSetActive","id","checking","serverError","userSetActive","userClearActive","userPasswordUpdate","userPasswordValues","startUserUploading","userUploadImage","endUploadImage","uploadImage","updateActiveUser","usersLoaded","users","RegisterScreen","fileInput","useRef","useSelector","state","uploadedImage","activeUser","password2","handleSubmit","startRegister","handleFileChange","files","trim","src","alt","direction","current","click","ref","style","disabled","AuthRouter","exact","path","PrivateRoute","isAuthenticated","Component","rest","PublicRoute","StorieCard","title","description","short_description","substring","date_format","format","location","useLocation","userid","useParams","justifyContent","Card","pathname","CardActions","CardContent","gutterBottom","ml","mr","srcset","image","height","rows","cols","srcSet","ImgList","activeStorie","ImageList","transform","rowHeight","gap","index","ImageListItem","Dropzone","initialImage","fileInputRef","validFiles","setValidFiles","unsupportedFiles","setUnsupportedFiles","errorMessage","setErrorMessage","imagePreview","setImagePreview","useEffect","filteredArr","reduce","acc","find","concat","handleFiles","i","validateFile","prevArray","indexOf","fileSize","size","Math","floor","parseFloat","pow","toFixed","removeFile","findIndex","index3","splice","storieRemoveImages","onDragOver","onDragEnter","onDragLeave","onDrop","dataTransfer","multiple","invalid","reader","FileReader","readAsDataURL","onload","result","openImageView","fileName","lastIndexOf","StorieImageCard","urlImage","ListItem","ListItemAvatar","ListItemText","storieRemoveOneImage","StorieForm","setFormValues","modalViewModel","ui","List","TextField","margin","label","multiline","DeleteFab","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","toast","then","isConfirmed","Fab","EditFab","ReturnFab","ShowLoading","open","Backdrop","zIndex","drawer","CircularProgress","MessageSnack","showMessage","handleClose","reason","Snackbar","autoHideDuration","onClose","initStorie","Transition","React","forwardRef","Slide","StorieModal","storieModalOpen","isValidImages","handleSubmitForm","closeModal","Dialog","disableEnforceFocus","fullScreen","TransitionComponent","AppBar","Toolbar","edge","flex","AddNewFab","StoriesScreen","ButtonAppBarCollapse","handleMenu","setState","anchorEl","currentTarget","bind","classes","this","Boolean","buttonCollapse","Menu","anchorOrigin","vertical","horizontal","transformOrigin","children","withStyles","breakpoints","up","UserFormChangePassword","initPassword","newPassword","passError","setPassError","formPassValues","setFormPassValues","handleInputChangePassword","handleSubmitPasswordForm","isPasswordFormValid","UserFormFields","userId","authId","myRol","marginBottom","FormControl","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","UserFormInfo","UserForm","initUser","UserModal","userModalOpen","useStyles","makeStyles","active","background","activeButton","_root","left","root","right","buttonBar","down","history","useHistory","handleLogout","handleOpenInfoModal","MenuItem","button","push","ListItemIcon","grey","flexGrow","grow","menuButton","marginLeft","marginRight","navigation","toggleDrawer","appTitle","MyStoriesScreen","UserInfoScreen","username","UserCard","secondary","UsersScreen","StorieRouter","fixed","ErrorScreen","AppRouter","rootReducer","combineReducers","action","filter","img","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","StoriesApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e88d4cfc.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","\nexport const types = {\n\n    uiUserOpenModal: '[ui] Open user modal',\n    uiUserCloseModal: '[ui] Close user modal',\n    uiStorieOpenModal: '[ui] Open storie modal',\n    uiStorieCloseModal: '[ui] Close storie modal',\n    uiModalViewModel: '[ui] Modal View Model',\n    uiModalEditModel: '[ui] Modal Edit Model',\n    uiOpenShowSuccessMessage: '[ui] Open Show Success Message',\n    uiOpenShowErrorMessage: '[ui] Open Show Error Message',\n    uiCloseShowMessage: '[ui] Close Show Message',\n    uiShowLoading: '[ui] Show Loading',\n\n    userSetActive: '[user] User Set Active',\n    userClearActive: '[user] Clear active user',\n    userUrlUpload: '[user] User Url Upload',\n    userUploadedImage: '[user] User Uploaded Image',\n    userEndUploadedImage: '[user] User End Uploaded Image',\n    userUpdateActiveUser: '[user] User Update Active User',\n    usersLoaded: '[user] User Get Users',\n\n    storieSetActive: '[storie] Set Active',\n    storieLogout: '[storie] Logout storie',\n    storieStartAddNew: '[storie] Start add new',\n    storieAddNew: '[storie] Add new',\n    storieClearActivestorie: '[storie] Clear active storie',\n    storieUpdated: '[storie] Storie updated',\n    storieDeleted: '[storie] Storie deleted',\n    storieLoaded: '[storie] Stories loaded',\n    storieAddImages: '[storie] Storie  Add Image',\n    storieRemoveImages: '[storie] Storie Remove Image',\n    storieIsValidImages: '[storie] Storie Valid Images',\n    storieClearImages: '[storie] Storie Clear Images',\n    storieRemoveOneImage: '[storie] Storie Remove One Image', \n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n    authSetServerError: '[auth] Set server error',\n    authUserUpdated: '[auth] User Updated'\n\n}","\nexport const fileUpload = async ( file ) => {\n    \n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dcsutpqkl/upload';\n    const formData = new FormData();\n    formData.append('upload_preset','stories-app');\n    formData.append('file', file );\n\n    try {\n        \n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            return null;\n        }\n\n    } catch (err) {\n        throw err;\n    }\n\n}\n\nexport const filesUpload = async( images ) => {\n\n    let urlArray = [];\n\n    try {\n\n        for (const file of images) {\n            const clouResp = await fileUpload(file);\n            urlArray = [...urlArray, clouResp];\n        }\n\n        return urlArray;\n\n    } catch (error) {\n        console.log(error);\n    }\n\n}","import moment from 'moment';\r\n\r\nexport const prepareStories = ( stories = [] ) => {\r\n    return stories.map(\r\n        (e) => ({\r\n            ...e,\r\n            registration_date: moment( e.registration_date ).toDate(),\r\n        })\r\n    );\r\n}\r\n","import { types } from '../types/types';\n\nexport const uiStorieOpenModal = () => ({ type: types.uiStorieOpenModal });\nexport const uiStorieCloseModal = () => ({ type: types.uiStorieCloseModal });\nexport const uiModalViewModel = () => ({ type: types.uiModalViewModel });\nexport const uiModalEditModel = () => ({ type: types.uiModalEditModel });\n\nexport const uiUserOpenModal = () => ({ type: types.uiUserOpenModal });\nexport const uiUserCloseModal = () => ({ type: types.uiUserCloseModal });\n\n\nexport const uiOpenShowSuccessMessage = (message) => ({ type: types.uiOpenShowSuccessMessage, payload: message });\nexport const uiOpenShowErrorMessage = (message) => ({ type: types.uiOpenShowErrorMessage, payload: message });\nexport const uiCloseShowMessage = () => ({ type: types.uiCloseShowMessage });\n\nexport const uiShowLoading = (loading) => ({ type: types.uiShowLoading, payload: loading });\n\n\n","import Swal from 'sweetalert2';\r\n\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { filesUpload } from '../helpers/fileUpload';\r\nimport { prepareStories } from \"../helpers/prepareStories\";\r\nimport { types } from \"../types/types\";\r\nimport { uiOpenShowSuccessMessage, uiOpenShowErrorMessage } from './ui';\r\n\r\nexport const storieLogout =() => ({ type: types.storieLogout });\r\n\r\nexport const storieStartAddNew = ( storie, images ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth.user;\r\n\r\n        try {\r\n\r\n            const urlImages = await filesUpload(images);\r\n\r\n            storie = {\r\n                ...storie,\r\n                urlImages\r\n            }\r\n\r\n            const resp = await fetchConToken('stories', storie, 'POST');\r\n            const body = await resp.json();\r\n\r\n\r\n            if ( body.ok ) {\r\n                storie._id = body.storie._id;\r\n                storie.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch( storieAddNew( storie ) );\r\n                dispatch(storieClearImages());\r\n                dispatch( uiOpenShowSuccessMessage(\"Successfully Created!\") );\r\n            }else{\r\n                dispatch( uiOpenShowErrorMessage(body.msg) );\r\n                dispatch(storieClearImages());\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            dispatch(storieClearImages());\r\n            dispatch( uiOpenShowErrorMessage('An error ocurred!') );\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst storieAddNew = (storie) => ({\r\n    type: types.storieAddNew,\r\n    payload: storie\r\n});\r\n\r\nexport const storieClearImages = () => ({\r\n    type: types.storieClearImages\r\n})\r\n\r\nexport const storieStartUpdate = ( storie, images ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const urlImages = await filesUpload(images);\r\n\r\n            storie = {\r\n                ...storie,\r\n                urlImages: [...storie.urlImages, ...urlImages ]\r\n            }\r\n\r\n            const resp = await fetchConToken(`stories/${ storie._id }`, storie, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( storieUpdated( storie ) );\r\n                dispatch( uiOpenShowSuccessMessage(\"Successfully Updated!\") );\r\n            dispatch(storieClearImages());\r\n            } else {\r\n                dispatch( uiOpenShowErrorMessage(body.msg) );\r\n            dispatch(storieClearImages());\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            dispatch( uiOpenShowErrorMessage('An error ocurred!') );\r\n            dispatch(storieClearImages());\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst storieUpdated = ( storie ) => ({\r\n    type: types.storieUpdated,\r\n    payload: storie\r\n});\r\n\r\nexport const storieStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { _id } = getState().storie.activeStorie;\r\n        try {\r\n            const resp = await fetchConToken(`stories/${ _id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( storieDeleted() );\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Your storie has been deleted.',\r\n                    'success',\r\n                    )\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst storieDeleted = () => ({ type: types.storieDeleted });\r\n\r\nexport const storieSetActive = (storie) => ({\r\n    type: types.storieSetActive,\r\n    payload: storie\r\n});\r\n\r\nexport const storieClearActiveStorie = () => ({ type: types.storieClearActivestorie});\r\n\r\nexport const storieStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'stories' );\r\n            const body = await resp.json();\r\n            \r\n            const stories = prepareStories( body.stories );\r\n\r\n            dispatch( storieLoaded( stories ) );\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', 'There was an error connecting to the server', 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst storieLoaded = (stories) => ({\r\n    type: types.storieLoaded,\r\n    payload: stories\r\n})\r\n\r\nexport const storieAddImage = (file) => ({\r\n    type: types.storieAddImages,\r\n    payload: file\r\n});\r\n\r\nexport const storieRemoveImages = (images) => ({\r\n    type: types.storieRemoveImages,\r\n    payload: images\r\n});\r\n\r\nexport const storieIsValidImages = (valid) => ({\r\n    type: types.storieIsValidImages,\r\n    payload: valid\r\n});\r\n\r\nexport const storieRemoveOneImage = (urlImage) => ({\r\n    type: types.storieRemoveOneImage,\r\n    payload: urlImage\r\n});","import { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { storieLogout } from './storie';\r\nimport { uiOpenShowSuccessMessage, uiOpenShowErrorMessage } from './ui';\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        Swal.fire({\r\n            text:'Wait...',\r\n            showConfirmButton: false,\r\n            allowOutsideClick: false\r\n            });\r\n        Swal.showLoading();\r\n        \r\n        try {\r\n            const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n            const body = await resp.json();\r\n            if( body.ok ) {\r\n                localStorage.setItem('token', body.token );\r\n                localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n                dispatch( login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                    email: body.email,\r\n                    urlimage: body.urlimage,\r\n                    rol: body.rol\r\n                }) )\r\n                Swal.close();\r\n            } else {\r\n                Swal.close();\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            Swal.close();\r\n            Swal.fire('Error', 'There was an error connecting to the server', 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name, urlimage = 'https://res.cloudinary.com/dcsutpqkl/image/upload/v1637987410/blobn0igehlr4fxzfqet.png' ) => {\r\n    return async( dispatch ) => {\r\n        Swal.fire({\r\n            text:'Wait...',\r\n            showConfirmButton: false,\r\n            allowOutsideClick: false\r\n            });\r\n        Swal.showLoading();\r\n\r\n        try {\r\n            const resp = await fetchSinToken( 'auth/new', { email, password, name, urlimage }, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                localStorage.setItem('token', body.token );\r\n                localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n                dispatch( login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                    email: body.email,\r\n                    urlimage: body.urlimage,\r\n                    rol: body.rol\r\n                }) )\r\n                Swal.close();\r\n            } else {\r\n                Swal.close();\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            Swal.close();\r\n            Swal.fire('Error', 'There was an error connecting to the server', 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken( 'auth/renew' );\r\n            const body = await resp.json();\r\n            \r\n            if( body.ok ) {\r\n                localStorage.setItem('token', body.token );\r\n                localStorage.setItem('token-init-date', new Date().getTime() );\r\n                dispatch( login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                    email: body.email,\r\n                    urlimage: body.urlimage,\r\n                    rol: body.rol\r\n                }) )\r\n            } else {\r\n                dispatch( checkingFinish() );\r\n            }\r\n        } catch (error) {\r\n            Swal.close();\r\n            dispatch( checkingFinish() );\r\n            dispatch( setServerError() );\r\n        }\r\n    }\r\n        \r\n}\r\n\r\nconst setServerError = () => ({ type: types.authSetServerError });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( storieLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n\r\nexport const userStartUpdate = ( user, currentUser = false ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`user`, user, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                if(currentUser){\r\n                    dispatch( userUpdated( user ) );\r\n                }\r\n\r\n                dispatch( uiOpenShowSuccessMessage(\"Successfully Updated!\") );\r\n\r\n            } else {\r\n                dispatch( uiOpenShowErrorMessage(body.msg) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( uiOpenShowErrorMessage('An error ocurred!') );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst userUpdated = ( user ) => ({\r\n    type: types.authUserUpdated,\r\n    payload: user\r\n});","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport const Copyright = (props) => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n        Cristian Morales - {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3f51b5',\r\n    },\r\n    danger: {\r\n        main: '#ba000d',\r\n    }\r\n  },\r\n});\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport Input from '@mui/material/Input';\r\n\r\n\r\nimport validator from 'validator';\r\n\r\nimport { Copyright } from './Copyright';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin } from '../../actions/auth';\r\nimport { theme } from '../../helpers/theme';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [values, setValues] = useState({showPassword: false});\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'admin@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch( startLogin( email, password ) );\r\n        }\r\n    };\r\n\r\n    const isFormValid = () => {\r\n        if ( !validator.isEmail( email ) ) {\r\n            setError('Email is not valid');\r\n            return false;\r\n        } else if (password.length < 6 ) {\r\n            setError('Password should be at least 6 characters');\r\n            return false\r\n        }\r\n        setError(\"\");\r\n       return true;\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({\r\n        ...values,\r\n        showPassword: !values.showPassword\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                        sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign In\r\n                        </Typography>\r\n                        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                            {\r\n                                error &&\r\n                                (\r\n                                    <Stack sx={{ width: '100%' }} spacing={2}>\r\n                                        <Alert severity=\"error\">{error}</Alert>\r\n                                    </Stack>\r\n                                )\r\n                            }\r\n\r\n                            <Input\r\n                                autoComplete=\"off\"\r\n                                value={email}\r\n                                onChange={handleInputChange}\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                required\r\n                                fullWidth\r\n                                autoFocus\r\n                            />\r\n\r\n                            <Input\r\n                                autoComplete=\"off\"\r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                value={password}\r\n                                onChange={handleInputChange}\r\n                                name=\"password\"\r\n                                placeholder=\"Passsword\"\r\n                                required\r\n                                fullWidth\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                    {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n\r\n                            <Button\r\n                                startIcon={<LoginIcon />}\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                sx={{ mt: 3, mb: 2 }}\r\n                            >\r\n                                Sign In\r\n                            </Button>\r\n                            <Grid container>\r\n                                {/* <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                                </Grid> */}\r\n                                <Grid item>\r\n                                    <Link \r\n                                        to=\"/auth/signup\"\r\n                                        className=\"link\"\r\n                                    >\r\n                                        Don't have an account? Sign Up\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            /> */}\r\n                        </Box>\r\n                    </Box>\r\n                    <Copyright sx={{ mt: 8, mb: 4 }} />\r\n                </Container>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}","import { types } from \"../types/types\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { uiOpenShowErrorMessage, uiOpenShowSuccessMessage } from \"./ui\";\r\n\r\nexport const startUserSetActive = (id = null) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        try {\r\n\r\n            if(id === null){\r\n                const user = getState().auth.user;\r\n                delete user.checking;\r\n                delete user.serverError;\r\n                dispatch( userSetActive( user ) );\r\n            }else{\r\n                const resp = await fetchConToken( `user/${id}` );\r\n                const body = await resp.json();\r\n                \r\n                const user = body.user;\r\n    \r\n                dispatch( userSetActive( user ) );\r\n            }\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', 'There was an error connecting to the server', 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const userSetActive = (user) => ({\r\n    type: types.userSetActive,\r\n    payload: user\r\n});\r\n\r\nexport const userClearActive = () => ({ type: types.userClearActive});\r\n\r\n\r\nexport const userPasswordUpdate = ( userPasswordValues ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`user/password`, userPasswordValues, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n               dispatch( uiOpenShowSuccessMessage(\"Successfully Updated!\") );\r\n            } else {\r\n                dispatch( uiOpenShowErrorMessage(body.msg) );\r\n                console.log(\"error: \", body.msg)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( uiOpenShowErrorMessage('An error ocurred!') );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startUserUploading = ( file, name = '' ) => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            const urlimage = await fileUpload( file );\r\n\r\n            dispatch( userUploadImage( urlimage, name ) );\r\n\r\n            dispatch( endUploadImage() );\r\n\r\n        } catch (error) {\r\n            dispatch( endUploadImage() );\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst userUploadImage = (urlimage, name) => ({\r\n    type: types.userUrlUpload,\r\n    payload: {urlimage, name}\r\n});\r\n\r\nexport const uploadImage = () => ({ type: types.userUploadedImage});\r\n\r\nconst endUploadImage = () => ({ type: types.userEndUploadedImage});\r\n\r\nexport const updateActiveUser = (user) => ({\r\n    type: types.userUpdateActiveUser,\r\n    payload: user\r\n});\r\n\r\nexport const usersStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'user' );\r\n            const body = await resp.json();\r\n            \r\n            let users = body.users;\r\n            let uid = '';\r\n\r\n            users = users.map(user => {\r\n                uid = user._id;\r\n                delete user._id;\r\n                return {\r\n                    uid,\r\n                    ...user\r\n                }\r\n            })\r\n\r\n            dispatch( usersLoaded( users ) );\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', 'There was an error connecting to the server', 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst usersLoaded = (users) => ({\r\n    type: types.usersLoaded,\r\n    payload: users\r\n})","import React, { useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport AutoStories from '@mui/icons-material/AutoStories';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\r\nimport validator from 'validator';\r\nimport Input from '@mui/material/Input';\r\n\r\nimport { Copyright } from './Copyright';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startRegister } from '../../actions/auth';\r\nimport { theme } from '../../helpers/theme';\r\nimport { startUserUploading, uploadImage, userClearActive } from '../../actions/user';\r\n\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const fileInput = useRef();\r\n    const dispatch = useDispatch();\r\n    const { uploadedImage, activeUser } = useSelector( state => state.user );\r\n    const { urlimage } = activeUser;\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n        name: ''\r\n    });\r\n\r\n    const { email, name, password, password2 } = formValues;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch( startRegister( email, password, name, urlimage ) );\r\n            dispatch( userClearActive() );\r\n        }\r\n    };\r\n\r\n    const handleFileChange = async(e) => {\r\n        dispatch( uploadImage() );\r\n\r\n        const file = e.target.files[0];\r\n\r\n        if ( file ) {\r\n            dispatch( startUserUploading(file));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        \r\n        if ( !validator.isEmail( email ) ) {\r\n            setError('Email is not valid');\r\n            return false;\r\n        } else if ( name.trim().length === 0 ) {\r\n            setError('Name is required'); \r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            setError('Password should be at least 6 characters and match each other');\r\n            return false\r\n        }\r\n        setError(\"\");\r\n       return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn \">\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                        sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                            <AutoStories />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign Up\r\n                        </Typography>\r\n                        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 3 }}>\r\n                            {\r\n                                error &&\r\n                                (\r\n                                    <Stack sx={{ width: '100%' }} spacing={2}>\r\n                                        <Alert severity=\"error\">{error}</Alert>\r\n                                    </Stack>\r\n                                )\r\n                            }\r\n\r\n                            {(!uploadedImage && urlimage) && \r\n                                <div>\r\n                                    <img\r\n                                        src={`${urlimage}`}\r\n                                        alt={name}\r\n                                        className=\"img-register\"\r\n                                    />\r\n                                </div>\r\n                            }\r\n   \r\n                            <Input\r\n                                autoComplete=\"off\"\r\n                                value={email}\r\n                                onChange={handleInputChange}\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                required\r\n                                fullWidth\r\n                                autoFocus\r\n                            />\r\n\r\n                            <Input\r\n                                autoComplete=\"off\"\r\n                                value={name}\r\n                                onChange={handleInputChange}\r\n                                name=\"name\"\r\n                                placeholder=\"Name\"\r\n                                required\r\n                                fullWidth\r\n                            />\r\n\r\n                            <Input\r\n                                autoComplete=\"off\"\r\n                                type='password'\r\n                                value={password}\r\n                                onChange={handleInputChange}\r\n                                name=\"password\"\r\n                                placeholder=\"Passsword\"\r\n                                required\r\n                                fullWidth\r\n                            />\r\n\r\n                            <Input\r\n                                autoComplete=\"off\"\r\n                                type= 'password'\r\n                                value={password2}\r\n                                onChange={handleInputChange}\r\n                                name=\"password2\"\r\n                                placeholder=\"Repeat Passsword\"\r\n                                required\r\n                                fullWidth\r\n                            />\r\n\r\n                            <Stack direction=\"row\" alignItems=\"left\" >\r\n                                <Button \r\n                                    color=\"primary\" \r\n                                    aria-label=\"upload picture\" \r\n                                    component=\"span\"\r\n                                    onClick={()=>fileInput.current.click()}\r\n                                >\r\n                                        <PhotoCamera />\r\n                                </Button>\r\n\r\n                                <input \r\n                                    onChange={ handleFileChange }\r\n                                    ref={fileInput} \r\n                                    type=\"file\" \r\n                                    style={{ display: 'none' }} \r\n                                />\r\n                            </Stack>\r\n\r\n                            {!uploadedImage && <Button\r\n                                    onClick={handleSubmit}\r\n                                    startIcon={<CreateNewFolderIcon />}\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    sx={{ mt: 3, mb: 2 }}\r\n                                >\r\n                                    Sign Up\r\n                                </Button>}\r\n\r\n                                {uploadedImage && <Button\r\n                                    startIcon={<CreateNewFolderIcon />}\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    sx={{ mt: 3, mb: 2 }}\r\n                                    disabled\r\n                                >\r\n                                    Uploading...\r\n                                </Button>\r\n                            }\r\n\r\n                            <Grid container>\r\n\r\n                                <Grid item>\r\n                                    <Link \r\n                                        to=\"/auth/signin\"\r\n                                        className=\"link\"\r\n                                    >\r\n                                        Do you have an account? Sign In\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                    <Copyright sx={{ mt: 8, mb: 4 }} />\r\n                </Container>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        \r\n        <Switch>\r\n            <Route \r\n                exact\r\n                path=\"/auth/signin\"\r\n                component={ LoginScreen }\r\n            />\r\n\r\n            <Route \r\n                exact\r\n                path=\"/auth/signup\"\r\n                component={ RegisterScreen }\r\n            />\r\n\r\n            <Redirect to=\"/auth/signin\" />\r\n\r\n\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    error,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                (isAuthenticated)\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/signin\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    error,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, Link, useParams } from 'react-router-dom'\r\nimport moment from 'moment';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActions } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { storieSetActive } from '../../actions/storie';\r\nimport { uiModalViewModel, uiStorieOpenModal } from '../../actions/ui';\r\n\r\nexport const StorieCard = ( {data} ) => {\r\n    const { uid } = useSelector( state => state.auth.user );\r\n    const dispatch = useDispatch();\r\n    const { title, description, registration_date, user  } = data;\r\n    const short_description = description.substring(0, 300) + \"...\";\r\n    const date_format = moment(registration_date).format('lll');\r\n    const location = useLocation();\r\n\r\n    const { userid } =useParams();\r\n\r\n    const handelEdit = () => {\r\n        if(location.pathname === '/mystories'){\r\n            dispatch( uiModalViewModel() );\r\n            dispatch( storieSetActive(data) );\r\n            dispatch( uiStorieOpenModal() );\r\n        }else{\r\n            dispatch( uiModalViewModel() );\r\n            dispatch( storieSetActive(data) );\r\n            dispatch( uiStorieOpenModal() );\r\n        }\r\n    }  \r\n\r\n    return (\r\n        <>\r\n            <Box \r\n                display=\"flex\" \r\n                alignItems=\"left\"\r\n                justifyContent=\"left\"\r\n            >\r\n                <Card sx={{ maxWidth: 1000 }}>\r\n                    <div className=\"pointer\" onClick={handelEdit}>\r\n                        <CardActions>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" >\r\n                                    {title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    {short_description}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActions>\r\n                    </div>\r\n\r\n                    <CardActions>\r\n                        <Box sx={{ ml: 2 }}  />\r\n                            {!userid && location.pathname !== '/mystories' && user._id !== uid ? \r\n                                <Link to={ `./user/${ user._id }/${ user.name }` } className=\"text-link\">\r\n                                    { user.name }\r\n                                </Link>\r\n                                : <span className=\"text-off-link\">{ user.name }</span>\r\n                            }\r\n                        <Box \r\n                            sx={{ mr: 2 }}\r\n                            display=\"flex\" \r\n                            width={1000}\r\n                            alignItems=\"right\"\r\n                            justifyContent=\"right\"\r\n                        >\r\n                            <Typography variant=\"caption\" color=\"text.secondary\">\r\n                                { date_format }\r\n                            </Typography>\r\n                        </Box>\r\n                    </CardActions>\r\n                </Card>\r\n            </Box>\r\n            <Box sx={{ mb: 4 }} />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport Box from '@mui/material/Box';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst srcset = (image, width, height, rows = 1, cols = 1) => {\r\n  return {\r\n    src: `${image}?w=${width * cols}&h=${height * rows}&fit=crop&auto=format`,\r\n    srcSet: `${image}?w=${width * cols}&h=${\r\n      height * rows\r\n    }&fit=crop&auto=format&dpr=2 2x`,\r\n  };\r\n}\r\n\r\nexport const ImgList = () => {\r\n\r\n  const { urlImages } = useSelector( state => state.storie.activeStorie );\r\n\r\n\r\n    return (\r\n    <Box \r\n        display=\"flex\" \r\n        justifyContent=\"center\"\r\n    >\r\n      <ImageList\r\n        sx={{\r\n          width: 400,\r\n          height: 300,\r\n          transform: 'translateZ(0)',\r\n        }}\r\n        rowHeight={150}\r\n        gap={1}\r\n      >\r\n        {urlImages.map((item, index) => {\r\n          const cols = 2;\r\n          const rows = 2;\r\n\r\n          return (\r\n            <ImageListItem key={index} cols={cols} rows={rows}>\r\n              <img\r\n                {...srcset(item, 200, 150, rows, cols)}\r\n                alt={item}\r\n                loading=\"lazy\"\r\n              />\r\n            </ImageListItem>\r\n          );\r\n        })}\r\n      </ImageList>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storieAddImage, storieIsValidImages, storieRemoveImages } from '../../actions/storie';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport './Dropzone.css';\r\n\r\nconst Dropzone = () => {\r\n\r\n    const initialImage = {\r\n        name: '',\r\n        file: ''\r\n    }\r\n\r\n    const fileInputRef = useRef();\r\n    const [validFiles, setValidFiles] = useState([]);\r\n    const [unsupportedFiles, setUnsupportedFiles] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [imagePreview, setImagePreview] = useState(initialImage)\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const { images } = useSelector( state => state.storie );\r\n\r\n    useEffect(() => {\r\n        let filteredArr = images.reduce((acc, current) => {\r\n            const x = acc.find(item => item.name === current.name);\r\n            if (!x) {\r\n              return acc.concat([current]);\r\n            } else {\r\n              return acc;\r\n            }\r\n        }, []);\r\n        setValidFiles([...filteredArr]);\r\n        if(unsupportedFiles.length > 0){\r\n            dispatch(storieIsValidImages(false));\r\n        }else{\r\n            dispatch(storieIsValidImages(true));\r\n        }\r\n    }, [images, unsupportedFiles, dispatch]);\r\n\r\n    const preventDefault = (e) => {\r\n        e.preventDefault();\r\n        // e.stopPropagation();\r\n    }\r\n\r\n    const dragOver = (e) => {\r\n        preventDefault(e);\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        preventDefault(e);\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        preventDefault(e);\r\n    }\r\n\r\n    const fileDrop = (e) => {\r\n        preventDefault(e);\r\n        const files = e.dataTransfer.files;\r\n        if (files.length) {\r\n            handleFiles(files);\r\n            \r\n        }\r\n    }\r\n\r\n    const filesSelected = () => {\r\n        if (fileInputRef.current.files.length) {\r\n            handleFiles(fileInputRef.current.files);\r\n        }\r\n    }\r\n\r\n    const fileInputClicked = () => {\r\n        fileInputRef.current.click();\r\n    }\r\n\r\n    const handleFiles = (files) => {\r\n        for(let i = 0; i < files.length; i++) {\r\n            if (validateFile(files[i])) {\r\n                dispatch(storieAddImage(files[i]));\r\n            } else {\r\n                files[i]['invalid'] = true;\r\n                dispatch(storieAddImage(files[i]));\r\n                setErrorMessage('File type not permitted');\r\n                setUnsupportedFiles(prevArray => [...prevArray, files[i]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateFile = (file) => {\r\n        const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/x-icon', 'image/webp'];\r\n        if (validTypes.indexOf(file.type) === -1) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const fileSize = (size) => {\r\n        if (size === 0) {\r\n          return '0 Bytes';\r\n        }\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\r\n    }\r\n\r\n    const removeFile = (file) => {\r\n        const index = validFiles.findIndex(e => e.name === file.name);\r\n        const index3 = unsupportedFiles.findIndex(e => e.name === file.name);\r\n        validFiles.splice(index, 1);\r\n        setValidFiles([...validFiles]);\r\n        dispatch(storieRemoveImages([...validFiles]));\r\n\r\n        if (index3 !== -1) {\r\n            unsupportedFiles.splice(index3, 1);\r\n            setUnsupportedFiles([...unsupportedFiles]);\r\n        }\r\n\r\n        if(imagePreview.name===file.name || validFiles.length < 1){\r\n            setImagePreview(initialImage);\r\n        }\r\n    }\r\n\r\n    const openImageView = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function(e) {\r\n            setImagePreview({name:file.name, file: e.target.result})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"drop-container pointer\"\r\n                    onDragOver={dragOver}\r\n                    onDragEnter={dragEnter}\r\n                    onDragLeave={dragLeave}\r\n                    onDrop={fileDrop}\r\n                    onClick={fileInputClicked}\r\n                >\r\n                    <div className=\"drop-message pointer\">\r\n                        <div className=\"upload-icon\"></div>\r\n                        Drag & Drop files here or click to select file(s)\r\n                    </div>\r\n                    <input\r\n                        ref={fileInputRef}\r\n                        className=\"file-input\"\r\n                        type=\"file\"\r\n                        multiple\r\n                        onChange={filesSelected}\r\n                    />\r\n                </div>\r\n\r\n                {unsupportedFiles.length ? <p>Please remove all unsupported files.</p> : ''}\r\n                \r\n                {\r\n                    validFiles.map((data, i) => \r\n                        <div className=\"file-status-bar\" key={i}>\r\n                            <div className=\"pointer\" onClick={!data.invalid ? () => openImageView(data) : () => removeFile(data.name)}>\r\n                                <div className=\"file-type-logo\"></div>\r\n                                <div className=\"file-type\">{fileType(data.name)}</div>\r\n                                <span className={`file-name ${data.invalid ? 'file-error' : ''}`}>{data.name.substring(0, 6) + \"..\"}</span>\r\n                                <span className=\"file-size\">({fileSize(data.size)})</span> {data.invalid && <span className='file-error-message'>({errorMessage})</span>}\r\n                            </div>\r\n                            <div className=\"file-remove\" onClick= {() => removeFile(data)}><DeleteIcon/></div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                {(validFiles.length > 0 && imagePreview.file) && <div>\r\n                    <img\r\n                        src={`${imagePreview.file}`}\r\n                        alt={imagePreview.file}\r\n                        className=\"img-storie\"\r\n                    />\r\n                </div>}\r\n\r\n            </div>\r\n            \r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dropzone","import React from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch } from 'react-redux';\r\nimport { storieRemoveOneImage } from '../../actions/storie';\r\n\r\nexport const StorieImageCard = ( { urlImage } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteImg = () => {\r\n        dispatch( storieRemoveOneImage(urlImage) );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                    <Avatar alt=\"Remy Sharp\" src={urlImage} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={\r\n                        <div className=\"img-align pointer\">\r\n                            <DeleteIcon onClick={deleteImg} />\r\n                        </div>\r\n                    }\r\n                />\r\n                \r\n            </ListItem>\r\n        </>\r\n    )\r\n}","import React  from 'react';\r\nimport moment from 'moment';                        \r\nimport { useSelector } from 'react-redux';\r\n\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Container from '@mui/material/Container';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { CardActions } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport List from '@mui/material/List';\r\n\r\nimport { ImgList } from './ImageList';\r\nimport Dropzone from '../dropzone/Dropzone';\r\nimport { StorieImageCard } from './StorieImageCard';\r\n\r\n\r\nconst theme = createTheme();\r\n\r\nexport const StorieForm = ( { formValues, setFormValues, error } ) => {\r\n\r\n    const { description, title, registration_date, user, urlImages } = formValues;\r\n\r\n    const date_format = moment(registration_date).format('lll');\r\n\r\n    const { modalViewModel } = useSelector( state => state.ui );\r\n\r\n    const { activeStorie } = useSelector( state => state.storie );\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" >\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                    marginTop: 11,\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    }}\r\n                >\r\n                    {!modalViewModel ?\r\n                        <div>\r\n                            <List sx={{ width: '100%', maxWidth: 500, bgcolor: 'background.paper' }}>\r\n                                {activeStorie && activeStorie.urlImages.map(urlImage => <StorieImageCard \r\n                                    key={urlImage} \r\n                                    urlImage={urlImage} />)\r\n                                }\r\n                            </List>\r\n                            <Box\r\n                                component=\"form\"\r\n                                justifyContent=\"center\"\r\n                            >\r\n                                {\r\n                                    error &&\r\n                                    (\r\n                                        <Stack sx={{ width: '100%' }} spacing={2}>\r\n                                            <Alert severity=\"error\">{error}</Alert>\r\n                                        </Stack>\r\n                                    )\r\n                                } \r\n\r\n                                <TextField\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"title\"\r\n                                    label=\"Title\"\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    value={ title }\r\n                                    onChange={ handleInputChange }\r\n                                />\r\n\r\n                                <TextField\r\n                                    required\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    type=\"text\"\r\n                                    multiline\r\n                                    rows={15}\r\n                                    autoComplete=\"off\"\r\n                                    value={ description }\r\n                                    onChange={ handleInputChange }\r\n                                />\r\n                                            \r\n                                <Dropzone />\r\n\r\n                            </Box> \r\n                        </div>\r\n                    \r\n                        : <Box \r\n                            display=\"flex\" \r\n                            justifyContent=\"center\"\r\n                        >\r\n                            <Card sx={{ maxWidth: 1000 }}>\r\n                                <CardActions>\r\n                                    <Box\r\n                                        sx={{ ml: 2 }}\r\n                                        display=\"flex\" \r\n                                        width={890}\r\n                                        alignItems=\"left\"\r\n                                        justifyContent=\"left\"\r\n                                    >\r\n                                        <Typography variant=\"body1\" color=\"text.secondary\">\r\n                                            Author: { user.name }\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <Box \r\n                                        sx={{ mr: 2 }}\r\n                                        display=\"flex\"\r\n                                        width={890}\r\n                                        alignItems=\"right\"\r\n                                        justifyContent=\"right\"\r\n                                    >\r\n                                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                                            Published on { date_format }\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </CardActions>\r\n\r\n\r\n                                {urlImages.length > 0 && <ImgList />}\r\n\r\n\r\n                                <CardActions>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"p\">\r\n                                            {description}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Box> \r\n                    }        \r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Fab from \"@material-ui/core/Fab\";\nimport Swal from 'sweetalert2';\n\nimport { storieStartDelete } from '../../actions/storie';\nimport { uiStorieCloseModal } from '../../actions/ui';\n\n\nexport const DeleteFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            showConfirmButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!',\n            target: '#custom-target',\n            toast: true\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    dispatch( storieStartDelete() );\n                    dispatch( uiStorieCloseModal() );\n                }\n            })\n       \n    }\n\n\n    return (\n        <>\n            <div id=\"custom-target\"></div>\n            <div className=\"fab-delete\"\n                onClick={ handleDelete}\n            >\n                <Fab color=\"primary\" aria-label=\"add\">\n                    <DeleteIcon />\n                </Fab>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiModalEditModel } from '../../actions/ui';\r\n\r\nexport const EditFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEdit = () => {\r\n        dispatch( uiModalEditModel() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"fab\"\r\n            onClick={ handleEdit}\r\n        >\r\n            <Fab color=\"primary\" aria-label=\"add\">\r\n                <EditIcon />\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiModalViewModel } from '../../actions/ui';\r\n\r\nexport const ReturnFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleViewModel = () => {\r\n        dispatch( uiModalViewModel() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"fab\"\r\n            onClick={ handleViewModel}\r\n        >\r\n            <Fab color=\"primary\" aria-label=\"add\">\r\n                <ArrowBackIcon />\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const ShowLoading = () => {\r\n\r\n    const { showLoading:open } = useSelector( state => state.ui );\r\n\r\n    return (\r\n        <div>\r\n      <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={open}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport { uiCloseShowMessage } from '../../actions/ui';\r\n\r\nexport const MessageSnack = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { showMessage } = useSelector( state => state.ui );\r\n\r\n    const { open, message, error } = showMessage;\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n\r\n        dispatch( uiCloseShowMessage() );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!error && <Stack spacing={2} sx={{ width: '100%' }}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                 <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Stack>}\r\n\r\n        {error && <Stack spacing={2} sx={{ width: '100%' }}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                 <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Stack>}\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nimport { uiStorieCloseModal, uiModalEditModel, uiShowLoading, uiOpenShowErrorMessage } from '../../actions/ui';\r\nimport { storieClearActiveStorie, storieClearImages, storieStartAddNew, storieStartUpdate } from '../../actions/storie';\r\nimport { StorieForm } from './StorieForm';\r\nimport { DeleteFab } from '../ui/DeleteFab';\r\n\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { theme } from '../../helpers/theme';\r\nimport { EditFab } from '../ui/EditFab';\r\nimport { ReturnFab } from '../ui/ReturnFab';\r\nimport { ShowLoading } from '../ui/ShowLoading';\r\nimport { MessageSnack } from '../ui/MessageSnack';\r\n\r\nconst initStorie = {\r\n    title: '',\r\n    description: '',\r\n    registration_date: moment().toDate()\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const StorieModal = () => {\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const { storieModalOpen, modalViewModel } = useSelector( state => state.ui );\r\n    const { activeStorie, images, isValidImages } = useSelector( state => state.storie );\r\n    const { uid } = useSelector( state => state.auth.user );\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const [formValues, setFormValues] = useState( initStorie );\r\n\r\n    const { description, title } = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n        if ( activeStorie ) {\r\n            setFormValues( activeStorie );\r\n        } else {\r\n            setFormValues( initStorie );\r\n        }\r\n    }, [activeStorie, setFormValues])\r\n\r\n    const handleSubmitForm = async(e) => {\r\n        e.preventDefault();\r\n        if(!isValidImages){\r\n            dispatch( uiOpenShowErrorMessage('You must select valid image format!.') );\r\n            return;\r\n        }\r\n        if(isFormValid()){\r\n            dispatch(uiShowLoading(true));\r\n            if(activeStorie){\r\n                formValues.urlImages=activeStorie.urlImages;\r\n                formValues.registration_date = moment().toDate();\r\n                await dispatch( storieStartUpdate(formValues, images) );\r\n            }else{\r\n                await dispatch( storieStartAddNew(formValues, images) );\r\n            }\r\n            closeModal();\r\n            dispatch(uiShowLoading(false));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        \r\n        if ( title.trim().length === 0 ) {\r\n            setError('Title is required');\r\n            return false;\r\n        } else if ( description.trim().length === 0 ) {\r\n            setError('Description is required'); \r\n            return false;\r\n        } \r\n        setError(\"\");\r\n       return true;\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiStorieCloseModal() );\r\n        dispatch( storieClearActiveStorie() );\r\n        setFormValues( initStorie );\r\n        dispatch( uiModalEditModel() );\r\n        dispatch(storieClearImages());\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            disableEnforceFocus\r\n            fullScreen\r\n            open={storieModalOpen}\r\n            onClose={handleClose}\r\n            TransitionComponent={Transition}\r\n        >\r\n            <ThemeProvider theme={theme}>\r\n                <AppBar color=\"primary\" sx={{ position: 'fixed' }}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={handleClose}\r\n                        aria-label=\"close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        \r\n                        {\r\n                            !modalViewModel ? <>\r\n                                <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                                    {activeStorie ? 'Edit storie' : 'New storie'} \r\n                                </Typography>\r\n                                <Button autoFocus color=\"inherit\" onClick={handleSubmitForm}>\r\n                                    save\r\n                                </Button>\r\n                            </>\r\n                            : <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                                    { title }\r\n                                </Typography>\r\n                        }\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ThemeProvider>\r\n            \r\n            <StorieForm \r\n                formValues={formValues}\r\n                setFormValues={setFormValues}\r\n                error={error}\r\n            />\r\n\r\n            <ShowLoading/>\r\n\r\n            <MessageSnack/>\r\n            \r\n            { (activeStorie && !modalViewModel) && <DeleteFab /> }\r\n            \r\n            { activeStorie && ((modalViewModel && activeStorie.user._id===uid)  && <EditFab />) }\r\n            \r\n            { (activeStorie && !modalViewModel) && <ReturnFab /> }\r\n      </Dialog>\r\n\r\n      \r\n    )\r\n}\r\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiStorieOpenModal } from '../../actions/ui';\nimport AddIcon from '@mui/icons-material/Add';\n\nimport Fab from \"@material-ui/core/Fab\";\n\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiStorieOpenModal() );\n    }\n\n\n    return (\n        <div className=\"fab\"\n            onClick={ handleClickNew}\n        >\n            <Fab color=\"primary\" aria-label=\"add\">\n                <AddIcon />\n            </Fab>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storieStartLoading } from '../../actions/storie';\r\nimport { StorieCard } from './StorieCard';\r\n\r\nimport { StorieModal } from './StorieModal';\r\n\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { MessageSnack } from '../ui/MessageSnack';\r\n\r\nexport const StoriesScreen = () => {\r\n\r\n    const { stories } = useSelector( state => state.storie );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( storieStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n            {\r\n                stories.map( storie => <StorieCard key={storie._id} data={storie} /> )\r\n            }\r\n\r\n            <AddNewFab />\r\n\r\n            <StorieModal/>\r\n\r\n            <MessageSnack/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Menu } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuTwoToneIcon from '@mui/icons-material/MenuTwoTone';\r\n\r\nconst styles = theme => ({\r\n  buttonCollapse: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    margin: \"10px\",\r\n    boxShadow: \"none\"\r\n  }\r\n});\r\n\r\nclass ButtonAppBarCollapse extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null\r\n    };\r\n    this.handleMenu = this.handleMenu.bind(this);\r\n  }\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={classes.buttonCollapse}>\r\n        <IconButton onClick={this.handleMenu}>\r\n          <MenuTwoToneIcon />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"menu-appbar\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          open={open}\r\n          onClose={this.handleClose}\r\n        >\r\n          {this.props.children}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(ButtonAppBarCollapse);\r\n","import React, { useState }  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Alert from '@mui/material/Alert';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { ShowLoading } from '../ui/ShowLoading';\r\nimport { uiShowLoading } from '../../actions/ui';\r\n\r\nimport { userPasswordUpdate } from '../../actions/user';\r\n\r\nexport const UserFormChangePassword = () => {\r\n\r\n    const initPassword = {\r\n        password: '',\r\n        newPassword: ''\r\n    }\r\n    \r\n    const dispatch = useDispatch();\r\n    const [passError, setPassError] = useState(\"\");\r\n    const [formPassValues, setFormPassValues] = useState( initPassword );\r\n    \r\n    const { password, newPassword } = formPassValues;\r\n    \r\n\r\n    const handleInputChangePassword = ({ target }) => {\r\n        setFormPassValues({\r\n            ...formPassValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmitPasswordForm = async(e) => {\r\n        e.preventDefault();\r\n        if(isPasswordFormValid()){\r\n            dispatch(uiShowLoading(true));\r\n            await dispatch( userPasswordUpdate(formPassValues) );   \r\n        }\r\n        setFormPassValues(initPassword);\r\n        dispatch(uiShowLoading(false));\r\n    }\r\n\r\n    const isPasswordFormValid = () => {\r\n        if ( newPassword.length < 6 || password.length < 6 ) {\r\n            setPassError('Password should be at least 6 characters');\r\n            return false\r\n        }\r\n        setPassError(\"\");\r\n       return true;\r\n    }\r\n\r\n    return (\r\n        <Box \r\n            className=\"animate__animated animate__fadeIn\"\r\n            component=\"form\" \r\n            sx={{\r\n                marginTop: 3,\r\n            }}\r\n            \r\n        >\r\n            <hr />\r\n            {\r\n                passError &&\r\n                (\r\n                    <Stack sx={{ width: '100%' }} spacing={2}>\r\n                        <Alert severity=\"error\">{passError}</Alert>\r\n                    </Stack>\r\n                )\r\n            }\r\n        \r\n            <h3>Update Your Password</h3>\r\n\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Previous Password\"\r\n                type=\"password\"\r\n                autoComplete=\"off\"\r\n                value={ password }\r\n                onChange={ handleInputChangePassword }\r\n            />\r\n\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"newPassword\"\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                autoComplete=\"off\"\r\n                value={ newPassword }\r\n                onChange={ handleInputChangePassword }\r\n            />\r\n\r\n            <Button\r\n                onClick={handleSubmitPasswordForm}\r\n                startIcon={<SaveIcon />}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n            >\r\n                Save\r\n            </Button>\r\n\r\n            <ShowLoading/>\r\n\r\n        </Box> \r\n    )\r\n}\r\n","import React, { useRef, useState }  from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Alert from '@mui/material/Alert';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nimport { startUserUploading, updateActiveUser, uploadImage } from '../../actions/user';\r\nimport { userStartUpdate } from '../../actions/auth';\r\nimport { uiShowLoading } from '../../actions/ui';\r\nimport { Radio } from '@mui/material';\r\nimport { UserFormChangePassword } from './UserFormChangePassword';\r\nimport { ShowLoading } from '../ui/ShowLoading';\r\n\r\nexport const UserFormFields = ( { formValues, setFormValues} ) => {\r\n\r\n    const { name, urlimage, rol, uid: userId } = formValues;\r\n\r\n    const dispatch = useDispatch();\r\n    const fileInput = useRef();\r\n    const [error, setError] = useState(\"\");\r\n    const { uploadedImage, activeUser } = useSelector( state => state.user );\r\n    const { uid: authId, rol: myRol } = useSelector( state => state.auth.user );\r\n\r\n\r\n    const handleFileChange = async(e) => {\r\n        dispatch( uploadImage() );\r\n\r\n        const file = e.target.files[0];\r\n\r\n        if ( file ) {\r\n            dispatch( startUserUploading(file, name));\r\n        }\r\n    }\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = async(e) => {\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch(uiShowLoading(true));\r\n            if(authId!==userId){\r\n                await dispatch( userStartUpdate(formValues) );\r\n                dispatch( updateActiveUser(formValues));\r\n            }else{\r\n                await dispatch( userStartUpdate(formValues, true) );\r\n                dispatch( updateActiveUser(formValues));\r\n            }\r\n            dispatch(uiShowLoading(false));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if ( name.trim().length === 0 ) {\r\n            setError('Name is required'); \r\n            return false;\r\n        } \r\n        setError(\"\");\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ShowLoading/>\r\n            \r\n            <Box \r\n                className=\"animate__animated animate__fadeIn\"\r\n                component=\"form\"\r\n                sx={{\r\n                    marginBottom: 3,\r\n                }}\r\n            >\r\n                {\r\n                    error &&\r\n                    (\r\n                        <Stack sx={{ width: '100%' }} spacing={2}>\r\n                            <Alert severity=\"error\">{error}</Alert>\r\n                        </Stack>\r\n                    )\r\n                } \r\n\r\n                {\r\n                    userId!==authId \r\n                        ? <h3 align=\"center\">Update {activeUser.name} User Information</h3> \r\n                        : <h3 align=\"center\">Update Your User Information</h3> \r\n                }\r\n\r\n                {\r\n                    <div>\r\n                        <img\r\n                            src={`${urlimage}`}\r\n                            alt={name}\r\n                            className=\"img-register\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    value={ name || '' }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                { ((myRol === 'ADMIN' && authId === userId) || (myRol === 'ADMIN' && activeUser.rol === 'USER')) && \r\n                    <Box \r\n                        sx={{\r\n                            marginBottom: 2,\r\n                            marginTop: 2\r\n                        }}\r\n                    >\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormLabel \r\n                                component=\"legend\" \r\n                                sx={{\r\n                                    marginBottom: 1,\r\n                                }}\r\n                            >\r\n                                User Type\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                                row aria-label=\"rol\" \r\n                                name=\"rol\" \r\n                                value={rol || ''}\r\n                                onChange={ handleInputChange }\r\n                            >\r\n                                <FormControlLabel value=\"ADMIN\" control={<Radio />} label=\"ADMIN\" />\r\n                                <FormControlLabel value=\"USER\" control={<Radio />} label=\"USER\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Box>\r\n                }\r\n\r\n                <Stack direction=\"row\" alignItems=\"left\" >\r\n                    <Button \r\n                        color=\"primary\" \r\n                        aria-label=\"upload picture\" \r\n                        component=\"span\"\r\n                        onClick={()=>fileInput.current.click()}\r\n                    >\r\n                            <PhotoCamera />\r\n                    </Button>\r\n\r\n                    <input \r\n                        onChange={ handleFileChange }\r\n                        ref={fileInput} \r\n                        type=\"file\" \r\n                        style={{ display: 'none' }} \r\n                    />\r\n                </Stack>\r\n\r\n                {!uploadedImage && <Button\r\n                    onClick={handleSubmitForm}\r\n                    startIcon={<SaveIcon />}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Save\r\n                </Button>}\r\n\r\n                {uploadedImage && <Button\r\n                    startIcon={<SaveIcon />}\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                    disabled\r\n                >\r\n                    Uploading...\r\n                </Button>}\r\n\r\n            </Box> \r\n\r\n            { userId===authId && \r\n                <UserFormChangePassword />\r\n            }\r\n                    \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport { CardActions } from '@mui/material';\r\nimport Card from '@mui/material/Card';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nexport const UserFormInfo = () => {\r\n\r\n    const { email, name, urlimage, rol } = useSelector( state => state.user.activeUser );\r\n\r\n    return (\r\n        <Box \r\n            className=\"animate__animated animate__fadeIn \"\r\n            display=\"flex\" \r\n            justifyContent=\"center\"\r\n        >\r\n            <Card sx={{ maxWidth: 1000 }}>\r\n                <div>\r\n                    <img\r\n                        src={`${urlimage}`}\r\n                        alt={name}\r\n                        className=\"img-register\"\r\n                    />\r\n                </div>\r\n                <CardActions>\r\n                    <Box\r\n                        sx={{ ml: 2 }}\r\n                        display=\"flex\" \r\n                        width={890}\r\n                        alignItems=\"left\"\r\n                        justifyContent=\"left\"\r\n                    >\r\n                        <Typography variant=\"body1\" color=\"text.secondary\">\r\n                            Email: { email }\r\n                        </Typography>\r\n                    </Box>\r\n                </CardActions>\r\n\r\n                <CardActions>\r\n                    <Box\r\n                        sx={{ ml: 2 }}\r\n                        display=\"flex\" \r\n                        width={890}\r\n                        alignItems=\"left\"\r\n                        justifyContent=\"left\"\r\n                    >\r\n                        <Typography variant=\"body1\" color=\"text.secondary\">\r\n                            Name: { name }\r\n                        </Typography>\r\n                    </Box>\r\n                </CardActions>\r\n\r\n                <CardActions>\r\n                    <Box\r\n                        sx={{ ml: 2 }}\r\n                        display=\"flex\" \r\n                        width={890}\r\n                        alignItems=\"left\"\r\n                        justifyContent=\"left\"\r\n                    >\r\n                        <Typography variant=\"body1\" color=\"text.secondary\">\r\n                            Rol: { rol }\r\n                        </Typography>\r\n                    </Box>\r\n                </CardActions>\r\n\r\n                <CardActions>\r\n                    <Box\r\n                        sx={{ ml: 2 }}\r\n                        display=\"flex\" \r\n                        width={890}\r\n                        alignItems=\"left\"\r\n                        justifyContent=\"left\"\r\n                    >\r\n                    </Box>\r\n                </CardActions>\r\n            </Card>\r\n        </Box> \r\n    )\r\n}\r\n","import React  from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\n\r\n\r\n\r\nimport { theme } from '../../helpers/theme';\r\n\r\nimport { UserFormFields } from './UserFormFields';\r\nimport { UserFormInfo } from './UserFormInfo';\r\nimport { MessageSnack } from '../ui/MessageSnack';\r\n\r\n\r\nexport const UserForm = ( { formValues, setFormValues} ) => {\r\n\r\n\r\n    const { modalViewModel } = useSelector( state => state.ui );   \r\n\r\n    return (\r\n        <>\r\n\r\n        <MessageSnack/>\r\n\r\n        <ThemeProvider theme={theme}>\r\n            <Container\r\n                component=\"main\" \r\n                maxWidth=\"sm\"    \r\n            >\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                    marginBottom: 5,\r\n                    marginTop: 13,\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    }}\r\n                >\r\n                    {\r\n                        !modalViewModel \r\n                            ?\r\n                                <UserFormFields\r\n                                    formValues={formValues}\r\n                                    setFormValues={setFormValues} \r\n                                />\r\n                            : \r\n                                <UserFormInfo />\r\n                    }\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n        </>\r\n    )\r\n}\r\n","import React, { forwardRef, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nimport { ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { uiUserCloseModal, uiModalEditModel } from '../../actions/ui';\r\n\r\nimport { theme } from '../../helpers/theme';\r\nimport { EditFab } from '../ui/EditFab';\r\nimport { userClearActive } from '../../actions/user';\r\nimport { UserForm } from './UserForm';\r\nimport { ReturnFab } from '../ui/ReturnFab';\r\n\r\n\r\nconst initUser = {\r\n    email: '',\r\n    name: '',\r\n    urlimage: ''\r\n}\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const UserModal = () => {\r\n\r\n    const { userModalOpen, modalViewModel } = useSelector( state => state.ui );\r\n    const { activeUser } = useSelector( state => state.user );\r\n    const { uid, rol } = useSelector( state => state.auth.user );\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const [formValues, setFormValues] = useState( initUser );\r\n\r\n    const { name } = formValues;\r\n\r\n     useEffect(() => {\r\n        if ( activeUser ) {\r\n            setFormValues( activeUser );\r\n        } else {\r\n            setFormValues( initUser );\r\n        }\r\n    }, [activeUser, setFormValues])\r\n\r\n    const handleClose = () => {\r\n        dispatch( uiUserCloseModal() );\r\n        dispatch( userClearActive() );\r\n        setFormValues( initUser );\r\n        dispatch( uiModalEditModel() );\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            disableEnforceFocus\r\n            fullScreen\r\n            open={userModalOpen}\r\n            onClose={handleClose}\r\n            TransitionComponent={Transition}\r\n        >\r\n            <ThemeProvider theme={theme}>\r\n                <AppBar color=\"primary\" sx={{ position: 'fixed' }}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={handleClose}\r\n                        aria-label=\"close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        \r\n                        {\r\n                            modalViewModel ? <>\r\n                                <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                                    {`${name}`} \r\n                                </Typography>\r\n                            </>\r\n                            : <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                                    Edit User Information\r\n                                </Typography>\r\n                        }\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ThemeProvider>\r\n            \r\n\r\n        <UserForm \r\n            formValues={formValues}\r\n            setFormValues={setFormValues}\r\n        />\r\n\r\n            {((modalViewModel && activeUser.uid===uid) || \r\n            (modalViewModel && rol==='ADMIN' && activeUser.rol==='USER'))  && <EditFab />}\r\n\r\n            {(activeUser && !modalViewModel) && <ReturnFab />}\r\n            \r\n      </Dialog>\r\n\r\n      \r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport AccountCircleTwoToneIcon from '@mui/icons-material/AccountCircleTwoTone';\r\nimport { Button, MenuItem } from \"@material-ui/core\";\r\nimport { grey } from '@mui/material/colors';\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { ListItemIcon } from \"@mui/material\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nimport ButtonAppBarCollapse from \"./ButtonAppBarCollapse\";\r\nimport { startLogout } from \"../../../actions/auth\";\r\nimport { startUserSetActive } from '../../../actions/user';\r\nimport { uiUserOpenModal, uiModalViewModel } from '../../../actions/ui';\r\nimport { UserModal } from \"../../user/UserModal\";\r\n\r\nconst styles = theme => ({\r\n    _root: {\r\n    position: \"absolute\",\r\n    left: 80\r\n  },\r\n  root: {\r\n    position: \"absolute\",\r\n    right: 0\r\n  },\r\n  buttonBar: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    },\r\n    margin: \"10px\",\r\n    paddingLeft: \"16px\",\r\n    right: 0,\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    background: \"transparent\"\r\n  }\r\n});\r\n\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    active: {\r\n      background: \"#384AA9\"\r\n    },\r\n    activeButton: {\r\n      background: \"#ECECEC\"\r\n    }\r\n  }\r\n});\r\n\r\n\r\nconst AppBarCollapse = props => {\r\n\r\n  const { rol } = useSelector( state => state.auth.user );\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleLogout = () => {\r\n      dispatch( startLogout() );\r\n  }\r\n\r\n  const handleOpenInfoModal = () => {\r\n    dispatch( startUserSetActive() );\r\n    dispatch( uiModalViewModel() );\r\n    dispatch( uiUserOpenModal() );\r\n  }\r\n\r\n  return(\r\n\r\n    <>\r\n    <div className={props.classes._root}>\r\n        <ButtonAppBarCollapse>\r\n          <MenuItem>\r\n              <ListItem \r\n                button \r\n                key={'Stories'} \r\n                onClick={() => history.push('/stories')}\r\n                className={location.pathname === '/stories' ? classes.activeButton : null}\r\n              >\r\n                <ListItemText primary={'Stories'} />\r\n              </ListItem>\r\n              <ListItem \r\n                button \r\n                key={'My_Stories'} \r\n                onClick={() => history.push('/mystories')}\r\n                className={location.pathname === '/mystories' ? classes.activeButton : null}\r\n              >\r\n                <ListItemText primary={'My_Stories'} />\r\n              </ListItem>\r\n              {rol==='ADMIN' && <ListItem \r\n                button \r\n                key={'Users'} \r\n                onClick={() => history.push('/users')}\r\n                className={location.pathname === '/users' ? classes.activeButton : null}\r\n              >\r\n                <ListItemText primary={'users'} />\r\n              </ListItem>}\r\n          </MenuItem>\r\n        </ButtonAppBarCollapse>\r\n        <div className={props.classes.buttonBar} id=\"appbar-collapse\">\r\n        <Button color=\"inherit\">\r\n            <ListItem \r\n              button \r\n              key={'Stories'} \r\n              onClick={() => history.push('/stories')}\r\n              className={location.pathname === '/stories' ? classes.active : null}\r\n            >\r\n              <ListItemText primary={'Stories'} />\r\n            </ListItem>\r\n            <ListItem \r\n              button \r\n              key={'My_Stories'} \r\n              onClick={() => history.push('/mystories')}\r\n              className={location.pathname === '/mystories' ? classes.active : null}\r\n            >\r\n              <ListItemText primary={'My_Stories'} />\r\n            </ListItem>\r\n            {rol==='ADMIN' && <ListItem \r\n              button \r\n              key={'Users'} \r\n              onClick={() => history.push('/users')}\r\n              className={location.pathname === '/users' ? classes.active : null}\r\n            >\r\n              <ListItemText primary={'Users'} />\r\n            </ListItem>}\r\n        </Button>\r\n        </div>\r\n    </div>\r\n    <div className={props.classes.root}>\r\n        <ButtonAppBarCollapse>\r\n          <MenuItem>\r\n          <ListItem \r\n                button \r\n                key={'UserInfo'} \r\n                onClick={handleOpenInfoModal}\r\n            >\r\n              <ListItemText primary={'My info'} />\r\n            </ListItem>\r\n            <ListItem \r\n                button \r\n                key={'Logout'} \r\n                onClick={handleLogout}\r\n            >\r\n              <ListItemText primary={'Logout'} />\r\n              </ListItem>\r\n          </MenuItem>\r\n        </ButtonAppBarCollapse>\r\n        <div className={props.classes.buttonBar} id=\"appbar-collapse\">\r\n        <Button color=\"inherit\">\r\n          <ListItem \r\n                button \r\n                key={'UserInfo'} \r\n                onClick={handleOpenInfoModal}\r\n              >\r\n                <ListItemIcon><AccountCircleTwoToneIcon sx={{ color: grey[50] }}/></ListItemIcon>\r\n            </ListItem>\r\n          <ListItem \r\n              button \r\n              key={'Logout'} \r\n              onClick={handleLogout}\r\n            >\r\n              <ListItemIcon><LogoutIcon sx={{ color: grey[50] }}/></ListItemIcon>\r\n          </ListItem>\r\n        </Button>\r\n        </div>\r\n    </div>\r\n\r\n    <UserModal/>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(AppBarCollapse);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBarCollapse from \"./AppBarCollapse\";\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n  navigation: {},\r\n  toggleDrawer: {},\r\n  appTitle: {\r\n    position: 'absolute',\r\n    width: 150,\r\n    marginLeft: 30\r\n  }\r\n};\r\n\r\nfunction Navbar(props) {\r\n  const { classes } = props;\r\n  const history = useHistory();\r\n  return (\r\n    <AppBar position=\"relative\" className={classes.navigation}>\r\n      <Toolbar>\r\n        <Button color=\"inherit\">\r\n            <ListItem \r\n              button \r\n              key={'Main'} \r\n              onClick={() => history.push('/')}\r\n              className={classes.appTitle}\r\n            >\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"inherit\"\r\n              >\r\n                My App\r\n              </Typography>\r\n            </ListItem>\r\n        </Button>\r\n        <AppBarCollapse />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Navbar);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { storieStartLoading } from '../../actions/storie';\r\nimport { MessageSnack } from '../ui/MessageSnack';\r\nimport { StorieCard } from './StorieCard';\r\nimport { StorieModal } from './StorieModal';\r\n\r\nexport const MyStoriesScreen = () => {\r\n\r\n    const { stories } = useSelector( state => state.storie );\r\n    const { uid } = useSelector( state => state.auth.user );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( storieStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n            {\r\n                stories.map( storie => (storie.user._id===uid) && <StorieCard key={storie._id} data={storie} /> )\r\n            }\r\n            \r\n            <StorieModal/>\r\n\r\n            <MessageSnack/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CardActions } from '@mui/material';\r\nimport { storieStartLoading } from '../../actions/storie';\r\nimport { StorieCard } from '../storie/StorieCard';\r\nimport { UserModal } from '../user/UserModal';\r\nimport { startUserSetActive } from '../../actions/user';\r\nimport { uiUserOpenModal, uiModalViewModel } from '../../actions/ui';\r\nimport { StorieModal } from '../storie/StorieModal';\r\n\r\nexport const UserInfoScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { stories } = useSelector( state => state.storie );\r\n\r\n    const { userid, username } = useParams();\r\n\r\n    const handleViewProfile = () => {\r\n        dispatch( startUserSetActive(userid) );\r\n        dispatch( uiModalViewModel() );\r\n        dispatch( uiUserOpenModal() );\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( storieStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n\r\n            <h1>Historias de {username}</h1>\r\n            <hr/>\r\n\r\n            <CardActions>\r\n                <div className=\"text-link pointer\" onClick={handleViewProfile}>\r\n                    View profile\r\n                </div>  \r\n            </CardActions>\r\n\r\n            {\r\n                stories.map( storie => (storie.user._id===userid) && <StorieCard key={storie._id} data={storie} /> )\r\n            }\r\n\r\n            <StorieModal/>\r\n\r\n            <UserModal/>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nexport const UserCard = ( { data } ) => {\r\n\r\n    return (\r\n        <ListItem alignItems=\"flex-start\">\r\n            <ListItemAvatar>\r\n                <Avatar alt=\"Remy Sharp\" src={data.urlimage} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                className=\"text-name-card \"\r\n                primary={\r\n                    <Link to={ `./user/${ data.uid }/${ data.name }` } className=\"text-link\">\r\n                        { data.name }\r\n                    </Link>\r\n                }\r\n                \r\n                secondary={\r\n                    <>\r\n                        <Typography\r\n                            sx={{ display: 'inline' }}\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"text.primary\"\r\n                        >\r\n                            {data.email}\r\n                        </Typography>\r\n                        {` - ${data.rol}`}\r\n                    </>\r\n                }\r\n            />\r\n       </ListItem>  \r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { usersStartLoading } from '../../actions/user';\r\nimport { UserCard } from './UserCard';\r\n\r\nimport List from '@mui/material/List';\r\n\r\nexport const UsersScreen = () => {\r\n\r\n    const { users } = useSelector( state => state.user );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( usersStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n            <List sx={{ width: '100%', maxWidth: 500, bgcolor: 'background.paper' }}>\r\n                {\r\n                    users.map( user => <UserCard key={user.uid} data={user} /> )\r\n                }\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Container from '@mui/material/Container';\r\n\r\nimport { StoriesScreen } from '../components/storie/StoriesScreen';\r\nimport  Navbar  from '../components/ui/Navbar/Navbar';\r\nimport { MyStoriesScreen } from '../components/storie/MyStoriesScreen';\r\nimport { Box } from '@mui/system';\r\nimport { UserInfoScreen } from '../components/user/UserInfoScreen';\r\nimport { UsersScreen } from '../components/user/UsersScreen';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const StorieRouter = () => {\r\n\r\n    const { rol } = useSelector( state => state.auth.user );\r\n\r\n    return (\r\n        <>\r\n            <div className=\"animate__animated animate__fadeIn\">\r\n                <Navbar />\r\n                \r\n\r\n                <Box sx={{ mt: 6 }} />\r\n                <CssBaseline />\r\n                <Container fixed>\r\n                    <Switch>\r\n                        <Route \r\n                            exact\r\n                            path=\"/\"\r\n                            component={ StoriesScreen }\r\n                        />\r\n\r\n                        <Route \r\n                            exact\r\n                            path=\"/user/:userid/:username\"\r\n                            component={ UserInfoScreen }\r\n                        />\r\n\r\n                        <Route \r\n                            exact\r\n                            path=\"/mystories\"\r\n                            component={ MyStoriesScreen }\r\n                        />\r\n\r\n                        {rol === 'ADMIN' && <Route \r\n                            exact\r\n                            path=\"/users\"\r\n                            component={ UsersScreen }\r\n                        />}\r\n\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </Container>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const ErrorScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Service Unavailable</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n    Route\n  } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { startChecking } from '../actions/auth';\n\nimport { AuthRouter } from './AuthRouter';\n\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { StorieRouter } from './StorieRouter';\n\nimport { ErrorScreen } from '../components/ui/ErrorScreen';\n\n  \n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, user, serverError } = useSelector( state => state.auth);\n\n    useEffect(() => {\n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        Swal.fire({\n            text:'Wait...',\n            showConfirmButton: false,\n            allowOutsideClick: false\n        });\n        Swal.showLoading();\n        return( <div></div> )\n    }else{\n        Swal.close();\n    }\n\n\n    return (\n        <Router>\n            <Switch>\n                { (serverError) \n                    ? <>\n                        <Route\n                            exact\n                            path=\"/error\"\n                            component={ ErrorScreen }\n                        />\n                        <Redirect to=\"/error\" />\n                    </>\n                    : <>\n                        <PublicRoute \n                            component={ AuthRouter }\n                            isAuthenticated={ !!user.uid }\n                            path=\"/auth\"\n                        />\n\n                        <PrivateRoute \n                            component={ StorieRouter }\n                            isAuthenticated={ !!user.uid }\n                            path=\"/\"\n                        />\n\n                        { (!serverError) && <Redirect to=\"/auth/signin\" /> }\n\n                        <Redirect to=\"/auth/signin\" />\n                    </>\n                }\n\n            </Switch>\n        </Router>\n    )\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    serverError: false,\n    user: {}\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                user: action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                user: {},\n                checking: false\n            }\n\n        case types.authSetServerError:\n            return {\n                ...state,\n                serverError: true\n            }\n\n        case types.authUserUpdated:\n            return {\n                ...state,\n                user: action.payload\n            }\n\n        default:\n            return state;\n    }\n\n}\n\n\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    stories: [],\r\n    activeStorie: null,\r\n    images: [],\r\n    isValidImages: true\r\n};\r\n\r\nexport const storieReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n        case types.storieSetActive:\r\n            return {\r\n                ...state,\r\n                activeStorie: action.payload\r\n            }\r\n        \r\n        case types.storieAddNew:\r\n            return {\r\n                ...state,\r\n                stories: [\r\n                    action.payload,\r\n                    ...state.stories\r\n                ]\r\n            }\r\n\r\n        case types.storieUpdated:\r\n            return {\r\n                ...state,\r\n                stories: state.stories.map(\r\n                    e => ( e._id === action.payload._id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.storieDeleted:\r\n            return {\r\n                ...state,\r\n                stories: state.stories.filter(\r\n                    e => ( e._id !== state.activeStorie._id )\r\n                ),\r\n                activeStorie: null\r\n            }\r\n    \r\n        case types.storieClearActivestorie:\r\n            return {\r\n                ...state,\r\n                activeStorie: null\r\n            }\r\n\r\n        case types.storieLoaded:\r\n            return {\r\n                ...state,\r\n                stories: [ ...action.payload ]\r\n            }\r\n\r\n        case types.storieLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        case types.storieAddImages:\r\n            return {\r\n                ...state,\r\n                images: [ ...state.images, action.payload ]\r\n            }\r\n            \r\n        case types.storieRemoveImages:\r\n            return {\r\n                ...state,\r\n                images: action.payload \r\n            }\r\n\r\n        case types.storieIsValidImages:\r\n            return {\r\n                ...state,\r\n                isValidImages: action.payload \r\n            }\r\n\r\n        case types.storieClearImages:\r\n            return {\r\n                ...state,\r\n                images: [] \r\n            } \r\n        \r\n            case types.storieRemoveOneImage:\r\n            return {\r\n                ...state,\r\n                activeStorie: {\r\n                    ...state.activeStorie,\r\n                    urlImages: state.activeStorie.urlImages.filter(img => img !== action.payload)\r\n                }\r\n            } \r\n\r\n            \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    storieModalOpen: false,\n    userModalOpen: false,\n    modalViewModel: false,\n    showMessage: {\n        open: false,\n        message: \"\",\n        error: false\n    },\n    showLoading: false\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiStorieOpenModal:\n            return {\n                ...state,\n                storieModalOpen: true\n            }\n\n        case types.uiStorieCloseModal:\n            return {\n                ...state,\n                storieModalOpen: false\n            }\n\n        case types.uiUserOpenModal:\n            return {\n                ...state,\n                userModalOpen: true\n            }\n\n        case types.uiUserCloseModal:\n            return {\n                ...state,\n                userModalOpen: false\n            }\n\n        case types.uiModalViewModel:\n            return {\n                ...state,\n                modalViewModel: true\n            }\n\n        case types.uiModalEditModel:\n            return {\n                ...state,\n                modalViewModel: false\n            }\n\n        case types.uiOpenShowSuccessMessage:\n            return {\n                ...state,\n                showMessage: {\n                    ...state.showMessage,\n                    open: true,\n                    message: action.payload,\n                    error: false\n                }\n            }\n\n        case types.uiOpenShowErrorMessage:\n            return {\n                ...state,\n                showMessage: {\n                    open: true,\n                    message: action.payload,\n                    error: true\n                }\n            }\n\n        case types.uiCloseShowMessage:\n            return {\n                ...state,\n                showMessage: {\n                    ...state.showMessage,\n                    open: false\n                }\n            }\n\n        case types.uiShowLoading:\n            return {\n                ...state,\n                showLoading: action.payload\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    activeUser: {},\r\n    users: [],\r\n    uploadedImage: false\r\n}\r\n\r\nexport const userReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.userSetActive:\r\n            return {\r\n                ...state,\r\n                activeUser: action.payload \r\n            }\r\n\r\n        case types.userClearActive:\r\n            return {\r\n                ...state,\r\n                activeUser: {}\r\n            }\r\n\r\n        case types.userUrlUpload:\r\n            return {\r\n                ...state,\r\n                activeUser: { ...state.activeUser, ...action.payload }\r\n            }\r\n\r\n        case types.userUploadedImage:\r\n            return {\r\n                ...state,\r\n                uploadedImage: true\r\n            }\r\n\r\n        case types.userEndUploadedImage:\r\n            return {\r\n                ...state,\r\n                uploadedImage: false\r\n            }\r\n        \r\n        case types.userUpdateActiveUser:\r\n        return {\r\n            ...state,\r\n            activeUser: action.payload,\r\n            users: state.users.map(user => user.uid!==action.payload.uid ? user : action.payload)\r\n        }\r\n\r\n        case types.usersLoaded:\r\n            return {\r\n                ...state,\r\n                users: [ ...action.payload ]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux';\n\nimport { authReducer } from './authReducer';\nimport { storieReducer } from './storieReducer';\nimport { uiReducer } from './uiReducer';\nimport { userReducer } from './userReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    auth: authReducer,\n    storie: storieReducer,\n    ui: uiReducer,\n    user: userReducer\n})","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nimport { store } from './store/store';\r\n\r\nexport const StoriesApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StoriesApp } from './StoriesApp';\n\nimport './styles.css';\n\nReactDOM.render(\n      <StoriesApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}